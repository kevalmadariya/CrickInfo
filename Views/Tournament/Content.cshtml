@model IEnumerable<crickinfo_mvc_ef_core.Models.Tournament>

<style>
    .tournament-container {
        background: linear-gradient(135deg, #f8faff 0%, #e3f2fd 100%);
        min-height: 100vh;
        padding: 2rem 0;
    }

    .page-header {
        text-align: center;
        margin-bottom: 3rem;
        color: #1565c0;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        text-shadow: 0 2px 4px rgba(21, 101, 192, 0.1);
    }

    .page-subtitle {
        font-size: 1.1rem;
        color: #666;
        font-weight: 300;
    }

    .cards-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 2rem;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    .tournament-card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(21, 101, 192, 0.1);
        overflow: hidden;
        transition: all 0.3s ease;
        border: 1px solid rgba(21, 101, 192, 0.08);
        position: relative;
    }

    .tournament-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 16px 48px rgba(21, 101, 192, 0.2);
    }

    .card-header {
        background: linear-gradient(135deg, #1976d2 0%, #1565c0 100%);
        color: white;
        padding: 1.5rem;
        position: relative;
        overflow: hidden;
    }

    .card-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -20px;
        width: 100px;
        height: 100px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
    }

    .tournament-name {
        font-size: 1.4rem;
        font-weight: 600;
        margin: 0;
        position: relative;
        z-index: 1;
    }

    .card-body {
        padding: 1.5rem;
    }

    .tournament-description {
        color: #555;
        margin-bottom: 1.5rem;
        line-height: 1.6;
        font-size: 0.95rem;
    }

    .start-date {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
        color: #1565c0;
        font-weight: 500;
    }

    .date-icon {
        width: 18px;
        height: 18px;
        margin-right: 8px;
        fill: currentColor;
    }

    .card-actions {
        display: flex;
        gap: 0.75rem;
        flex-wrap: wrap;
    }

    .btn {
        padding: 0.6rem 1.2rem;
        border: none;
        border-radius: 8px;
        font-size: 0.9rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .btn-primary {
        background: linear-gradient(135deg, #1976d2 0%, #1565c0 100%);
        color: white;
        flex: 1;
        justify-content: center;
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #1565c0 0%, #0d47a1 100%);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(21, 101, 192, 0.3);
    }

    .btn-secondary {
        background: rgba(21, 101, 192, 0.1);
        color: #1565c0;
        border: 1px solid rgba(21, 101, 192, 0.2);
    }

    .btn-secondary:hover {
        background: rgba(21, 101, 192, 0.15);
        border-color: #1565c0;
    }

    .btn-danger {
        background: rgba(244, 67, 54, 0.1);
        color: #d32f2f;
        border: 1px solid rgba(244, 67, 54, 0.2);
    }

    .btn-danger:hover {
        background: rgba(244, 67, 54, 0.15);
        border-color: #d32f2f;
    }

    .admin-actions {
        display: flex;
        gap: 0.5rem;
        margin-top: 1rem;
        padding-top: 1rem;
        border-top: 1px solid #e3f2fd;
    }

    .btn-icon {
        width: 16px;
        height: 16px;
        fill: currentColor;
    }

    .no-tournaments {
        text-align: center;
        padding: 4rem 2rem;
        color: #666;
    }

    .no-tournaments-icon {
        width: 64px;
        height: 64px;
        margin: 0 auto 1rem;
        opacity: 0.5;
        fill: #1565c0;
    }

    .floating-add-btn {
        position: fixed;
        top: 7rem;
        right: 2rem;
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, #1976d2 0%, #1565c0 100%);
        border: none;
        border-radius: 50%;
        box-shadow: 0 8px 24px rgba(21, 101, 192, 0.3);
        cursor: pointer;
        transition: all 0.3s ease;
        z-index: 1000;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        color: white;
    }

    .floating-add-btn:hover {
        transform: scale(1.1) rotate(90deg);
        box-shadow: 0 12px 32px rgba(21, 101, 192, 0.4);
        background: linear-gradient(135deg, #1565c0 0%, #0d47a1 100%);
    }

    .floating-add-btn:active {
        transform: scale(0.95) rotate(90deg);
    }

    .add-icon {
        width: 28px;
        height: 28px;
        fill: white;
        transition: transform 0.3s ease;
    }

    .floating-add-btn:hover .add-icon {
        transform: rotate(-90deg);
    }

    /* Tooltip for the add button */
    .floating-add-btn::before {
        content: 'Add Tournament';
        position: absolute;
        right: 70px;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 8px 12px;
        border-radius: 6px;
        font-size: 14px;
        white-space: nowrap;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        pointer-events: none;
    }

    .floating-add-btn:hover::before {
        opacity: 1;
        visibility: visible;
    }

    /* Arrow for tooltip */
    .floating-add-btn::after {
        content: '';
        position: absolute;
        right: 60px;
        top: 50%;
        transform: translateY(-50%);
        width: 0;
        height: 0;
        border-left: 6px solid rgba(0, 0, 0, 0.8);
        border-top: 6px solid transparent;
        border-bottom: 6px solid transparent;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
    }

    .floating-add-btn:hover::after {
        opacity: 1;
        visibility: visible;
    }

    @@media (max-width: 768px) {
        .cards-grid {
            grid-template-columns: 1fr;
            padding: 0 1rem;
        }
        
        .page-title {
            font-size: 2rem;
        }
        
        .card-actions {
            flex-direction: column;
        }
        
        .admin-actions {
            flex-direction: row;
        }

        .floating-add-btn {
            bottom: 1.5rem;
            right: 1.5rem;
            width: 56px;
            height: 56px;
        }

        .add-icon {
            width: 24px;
            height: 24px;
        }

        /* Hide tooltip on mobile */
        .floating-add-btn::before,
        .floating-add-btn::after {
            display: none;
        }
    }
</style>
<!-- Floating Add Button -->
<a href="@Url.Action("Create", "Tournament")" class="floating-add-btn" title="Add New Tournament">
    <svg class="add-icon" viewBox="0 0 24 24">
        <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" />
    </svg>
</a>

<div class="tournament-container">
    <div class="page-header">
        <h2 class="page-title">Available Tournaments</h2>
        <p class="page-subtitle">Discover and join exciting cricket tournaments</p>
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="cards-grid">
            @foreach (var tournament in Model)
            {
                <div class="tournament-card">
                    <div class="card-header">
                        <h3 class="tournament-name">@tournament.Name</h3>
                    </div>
                    
                    <div class="card-body">
                        <p class="tournament-description">
                            @(string.IsNullOrEmpty(tournament.Description) ? "No description available for this tournament." : tournament.Description)
                        </p>
                        
                        <div class="start-date">
                            <svg class="date-icon" viewBox="0 0 24 24">
                                <path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.89-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"/>
                            </svg>
                            <span>@tournament.DateOfTournament.ToString("MMM dd, yyyy")</span>
                        </div>
                        
                        <div class="card-actions">
                            <a href="@Url.Action("Content", "Match", new { id = tournament.Id })" class="btn btn-primary">
                                <svg class="btn-icon" viewBox="0 0 24 24">
                                    <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                                </svg>
                                View Schedule
                            </a>
                        </div>
                        
                        @* Show edit/delete buttons only if user owns the tournament *@
                        @if (tournament.UserId == ViewBag.UserId)
                        {
                            <div class="admin-actions">
                                <a href="@Url.Action("Edit", "Tournament", new { id = tournament.Id })" class="btn btn-secondary">
                                    <svg class="btn-icon" viewBox="0 0 24 24">
                                        <path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"/>
                                    </svg>
                                    Edit
                                </a>
                                <form asp-action="Delete" asp-route-id="@tournament.Id" method="post" onsubmit="return confirm('Are you sure you want to delete @tournament.Name?');" style="display:inline;">
                                    <button type="submit" class="btn btn-danger">
                                        <svg class="btn-icon" viewBox="0 0 24 24">
                                            <path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z" />
                                        </svg>
                                        Delete
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="no-tournaments">
            <svg class="no-tournaments-icon" viewBox="0 0 24 24">
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
            </svg>
            <h3>No Tournaments Available</h3>
            <p>There are currently no tournaments to display. Check back later!</p>
        </div>
    }
</div>

<script>
    function confirmDelete(tournamentId, tournamentName) {
        if (confirm(`Are you sure you want to delete the tournament "${tournamentName}"? This action cannot be undone.`)) {
            // Create a form and submit it for DELETE action
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action("Delete", "Tournament")/' + tournamentId;
            
            // Add anti-forgery token if available
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                const hiddenToken = document.createElement('input');
                hiddenToken.type = 'hidden';
                hiddenToken.name = '__RequestVerificationToken';
                hiddenToken.value = token.value;
                form.appendChild(hiddenToken);
            }
            
            document.body.appendChild(form);
            form.submit();
        }
    }
</script>